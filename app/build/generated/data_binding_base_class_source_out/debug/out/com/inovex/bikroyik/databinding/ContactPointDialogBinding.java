// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContactPointDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout ivCancelDialog;

  @NonNull
  public final TextView tvCallContractPoint;

  @NonNull
  public final TextView tvDialogRetailerAddress;

  @NonNull
  public final TextView tvDialogRetailerMobile;

  @NonNull
  public final TextView tvDialogRetailerName;

  @NonNull
  public final TextView tvLocationContactPoint;

  private ContactPointDialogBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout ivCancelDialog, @NonNull TextView tvCallContractPoint,
      @NonNull TextView tvDialogRetailerAddress, @NonNull TextView tvDialogRetailerMobile,
      @NonNull TextView tvDialogRetailerName, @NonNull TextView tvLocationContactPoint) {
    this.rootView = rootView;
    this.ivCancelDialog = ivCancelDialog;
    this.tvCallContractPoint = tvCallContractPoint;
    this.tvDialogRetailerAddress = tvDialogRetailerAddress;
    this.tvDialogRetailerMobile = tvDialogRetailerMobile;
    this.tvDialogRetailerName = tvDialogRetailerName;
    this.tvLocationContactPoint = tvLocationContactPoint;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContactPointDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContactPointDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.contact_point_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContactPointDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivCancelDialog;
      LinearLayout ivCancelDialog = rootView.findViewById(id);
      if (ivCancelDialog == null) {
        break missingId;
      }

      id = R.id.tvCallContractPoint;
      TextView tvCallContractPoint = rootView.findViewById(id);
      if (tvCallContractPoint == null) {
        break missingId;
      }

      id = R.id.tvDialogRetailerAddress;
      TextView tvDialogRetailerAddress = rootView.findViewById(id);
      if (tvDialogRetailerAddress == null) {
        break missingId;
      }

      id = R.id.tvDialogRetailerMobile;
      TextView tvDialogRetailerMobile = rootView.findViewById(id);
      if (tvDialogRetailerMobile == null) {
        break missingId;
      }

      id = R.id.tvDialogRetailerName;
      TextView tvDialogRetailerName = rootView.findViewById(id);
      if (tvDialogRetailerName == null) {
        break missingId;
      }

      id = R.id.tvLocationContactPoint;
      TextView tvLocationContactPoint = rootView.findViewById(id);
      if (tvLocationContactPoint == null) {
        break missingId;
      }

      return new ContactPointDialogBinding((LinearLayout) rootView, ivCancelDialog,
          tvCallContractPoint, tvDialogRetailerAddress, tvDialogRetailerMobile,
          tvDialogRetailerName, tvLocationContactPoint);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
