// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import com.jaredrummler.materialspinner.MaterialSpinner;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddScheduleDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialSpinner callScheduleSpinner;

  @NonNull
  public final LinearLayout llScheduleDateTime;

  @NonNull
  public final TextView tvCancelDialog;

  @NonNull
  public final TextView tvDateTime;

  @NonNull
  public final TextView tvDialogContactsName;

  @NonNull
  public final TextView tvDialogContactsNumber;

  @NonNull
  public final TextView tvDoneScheduleDialog;

  private AddScheduleDialogBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialSpinner callScheduleSpinner, @NonNull LinearLayout llScheduleDateTime,
      @NonNull TextView tvCancelDialog, @NonNull TextView tvDateTime,
      @NonNull TextView tvDialogContactsName, @NonNull TextView tvDialogContactsNumber,
      @NonNull TextView tvDoneScheduleDialog) {
    this.rootView = rootView;
    this.callScheduleSpinner = callScheduleSpinner;
    this.llScheduleDateTime = llScheduleDateTime;
    this.tvCancelDialog = tvCancelDialog;
    this.tvDateTime = tvDateTime;
    this.tvDialogContactsName = tvDialogContactsName;
    this.tvDialogContactsNumber = tvDialogContactsNumber;
    this.tvDoneScheduleDialog = tvDoneScheduleDialog;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddScheduleDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddScheduleDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_schedule_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddScheduleDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.callScheduleSpinner;
      MaterialSpinner callScheduleSpinner = rootView.findViewById(id);
      if (callScheduleSpinner == null) {
        break missingId;
      }

      id = R.id.llScheduleDateTime;
      LinearLayout llScheduleDateTime = rootView.findViewById(id);
      if (llScheduleDateTime == null) {
        break missingId;
      }

      id = R.id.tvCancelDialog;
      TextView tvCancelDialog = rootView.findViewById(id);
      if (tvCancelDialog == null) {
        break missingId;
      }

      id = R.id.tvDateTime;
      TextView tvDateTime = rootView.findViewById(id);
      if (tvDateTime == null) {
        break missingId;
      }

      id = R.id.tvDialogContactsName;
      TextView tvDialogContactsName = rootView.findViewById(id);
      if (tvDialogContactsName == null) {
        break missingId;
      }

      id = R.id.tvDialogContactsNumber;
      TextView tvDialogContactsNumber = rootView.findViewById(id);
      if (tvDialogContactsNumber == null) {
        break missingId;
      }

      id = R.id.tvDoneScheduleDialog;
      TextView tvDoneScheduleDialog = rootView.findViewById(id);
      if (tvDoneScheduleDialog == null) {
        break missingId;
      }

      return new AddScheduleDialogBinding((LinearLayout) rootView, callScheduleSpinner,
          llScheduleDateTime, tvCancelDialog, tvDateTime, tvDialogContactsName,
          tvDialogContactsNumber, tvDoneScheduleDialog);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
