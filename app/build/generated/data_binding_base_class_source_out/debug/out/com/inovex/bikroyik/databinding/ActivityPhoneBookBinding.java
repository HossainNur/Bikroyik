// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhoneBookBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView contactListRecycler;

  @NonNull
  public final ImageView noContactImg;

  @NonNull
  public final ConstraintLayout noImageViews;

  @NonNull
  public final ToolbarBakirKhataBinding toolbar;

  @NonNull
  public final TextView tvNoContact;

  @NonNull
  public final TextView tvNoContactOnPhoneBook;

  @NonNull
  public final View view;

  private ActivityPhoneBookBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView contactListRecycler, @NonNull ImageView noContactImg,
      @NonNull ConstraintLayout noImageViews, @NonNull ToolbarBakirKhataBinding toolbar,
      @NonNull TextView tvNoContact, @NonNull TextView tvNoContactOnPhoneBook, @NonNull View view) {
    this.rootView = rootView;
    this.contactListRecycler = contactListRecycler;
    this.noContactImg = noContactImg;
    this.noImageViews = noImageViews;
    this.toolbar = toolbar;
    this.tvNoContact = tvNoContact;
    this.tvNoContactOnPhoneBook = tvNoContactOnPhoneBook;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhoneBookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhoneBookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_phone_book, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhoneBookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contactList_recycler;
      RecyclerView contactListRecycler = rootView.findViewById(id);
      if (contactListRecycler == null) {
        break missingId;
      }

      id = R.id.no_contactImg;
      ImageView noContactImg = rootView.findViewById(id);
      if (noContactImg == null) {
        break missingId;
      }

      id = R.id.no_imageViews;
      ConstraintLayout noImageViews = rootView.findViewById(id);
      if (noImageViews == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBakirKhataBinding binding_toolbar = ToolbarBakirKhataBinding.bind(toolbar);

      id = R.id.tv_noContact;
      TextView tvNoContact = rootView.findViewById(id);
      if (tvNoContact == null) {
        break missingId;
      }

      id = R.id.tv_noContact_onPhoneBook;
      TextView tvNoContactOnPhoneBook = rootView.findViewById(id);
      if (tvNoContactOnPhoneBook == null) {
        break missingId;
      }

      id = R.id.view;
      View view = rootView.findViewById(id);
      if (view == null) {
        break missingId;
      }

      return new ActivityPhoneBookBinding((ConstraintLayout) rootView, contactListRecycler,
          noContactImg, noImageViews, binding_toolbar, tvNoContact, tvNoContactOnPhoneBook, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
