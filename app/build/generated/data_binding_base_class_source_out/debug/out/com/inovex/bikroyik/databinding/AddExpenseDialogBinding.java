// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddExpenseDialogBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView addExpenseImage;

  @NonNull
  public final EditText etExpenseAmount;

  @NonNull
  public final EditText etExpenseDetails;

  @NonNull
  public final Spinner expenseTypeSpinner;

  @NonNull
  public final TextView tvAddExpenseSelectDate;

  @NonNull
  public final TextView tvCancelNewTaskDialog;

  @NonNull
  public final TextView tvDoneAddExpenseDialog;

  private AddExpenseDialogBinding(@NonNull FrameLayout rootView, @NonNull ImageView addExpenseImage,
      @NonNull EditText etExpenseAmount, @NonNull EditText etExpenseDetails,
      @NonNull Spinner expenseTypeSpinner, @NonNull TextView tvAddExpenseSelectDate,
      @NonNull TextView tvCancelNewTaskDialog, @NonNull TextView tvDoneAddExpenseDialog) {
    this.rootView = rootView;
    this.addExpenseImage = addExpenseImage;
    this.etExpenseAmount = etExpenseAmount;
    this.etExpenseDetails = etExpenseDetails;
    this.expenseTypeSpinner = expenseTypeSpinner;
    this.tvAddExpenseSelectDate = tvAddExpenseSelectDate;
    this.tvCancelNewTaskDialog = tvCancelNewTaskDialog;
    this.tvDoneAddExpenseDialog = tvDoneAddExpenseDialog;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddExpenseDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddExpenseDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_expense_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddExpenseDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_expense_image;
      ImageView addExpenseImage = rootView.findViewById(id);
      if (addExpenseImage == null) {
        break missingId;
      }

      id = R.id.etExpenseAmount;
      EditText etExpenseAmount = rootView.findViewById(id);
      if (etExpenseAmount == null) {
        break missingId;
      }

      id = R.id.etExpenseDetails;
      EditText etExpenseDetails = rootView.findViewById(id);
      if (etExpenseDetails == null) {
        break missingId;
      }

      id = R.id.expense_type_spinner;
      Spinner expenseTypeSpinner = rootView.findViewById(id);
      if (expenseTypeSpinner == null) {
        break missingId;
      }

      id = R.id.tvAddExpenseSelectDate;
      TextView tvAddExpenseSelectDate = rootView.findViewById(id);
      if (tvAddExpenseSelectDate == null) {
        break missingId;
      }

      id = R.id.tvCancelNewTaskDialog;
      TextView tvCancelNewTaskDialog = rootView.findViewById(id);
      if (tvCancelNewTaskDialog == null) {
        break missingId;
      }

      id = R.id.tvDoneAddExpenseDialog;
      TextView tvDoneAddExpenseDialog = rootView.findViewById(id);
      if (tvDoneAddExpenseDialog == null) {
        break missingId;
      }

      return new AddExpenseDialogBinding((FrameLayout) rootView, addExpenseImage, etExpenseAmount,
          etExpenseDetails, expenseTypeSpinner, tvAddExpenseSelectDate, tvCancelNewTaskDialog,
          tvDoneAddExpenseDialog);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
