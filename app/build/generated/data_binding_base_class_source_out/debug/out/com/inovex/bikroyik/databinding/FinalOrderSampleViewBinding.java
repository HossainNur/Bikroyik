// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FinalOrderSampleViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView offer;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView quantity;

  @NonNull
  public final TextView unitPrice;

  private FinalOrderSampleViewBinding(@NonNull LinearLayout rootView, @NonNull TextView name,
      @NonNull TextView offer, @NonNull TextView price, @NonNull TextView quantity,
      @NonNull TextView unitPrice) {
    this.rootView = rootView;
    this.name = name;
    this.offer = offer;
    this.price = price;
    this.quantity = quantity;
    this.unitPrice = unitPrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FinalOrderSampleViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FinalOrderSampleViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.final_order_sample_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FinalOrderSampleViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.name;
      TextView name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.offer;
      TextView offer = rootView.findViewById(id);
      if (offer == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = rootView.findViewById(id);
      if (price == null) {
        break missingId;
      }

      id = R.id.quantity;
      TextView quantity = rootView.findViewById(id);
      if (quantity == null) {
        break missingId;
      }

      id = R.id.unit_price;
      TextView unitPrice = rootView.findViewById(id);
      if (unitPrice == null) {
        break missingId;
      }

      return new FinalOrderSampleViewBinding((LinearLayout) rootView, name, offer, price, quantity,
          unitPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
