// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SupportedToolbarBinding includeToolbarNotificationWindrow;

  @NonNull
  public final ImageView ivNotificationWinImage;

  @NonNull
  public final TextView tvNotificationWinBody;

  @NonNull
  public final TextView tvNotificationWinDate;

  @NonNull
  public final TextView tvNotificationWinTitle;

  private ActivityNotificationBinding(@NonNull LinearLayout rootView,
      @NonNull SupportedToolbarBinding includeToolbarNotificationWindrow,
      @NonNull ImageView ivNotificationWinImage, @NonNull TextView tvNotificationWinBody,
      @NonNull TextView tvNotificationWinDate, @NonNull TextView tvNotificationWinTitle) {
    this.rootView = rootView;
    this.includeToolbarNotificationWindrow = includeToolbarNotificationWindrow;
    this.ivNotificationWinImage = ivNotificationWinImage;
    this.tvNotificationWinBody = tvNotificationWinBody;
    this.tvNotificationWinDate = tvNotificationWinDate;
    this.tvNotificationWinTitle = tvNotificationWinTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.includeToolbar_NotificationWindrow;
      View includeToolbarNotificationWindrow = rootView.findViewById(id);
      if (includeToolbarNotificationWindrow == null) {
        break missingId;
      }
      SupportedToolbarBinding binding_includeToolbarNotificationWindrow = SupportedToolbarBinding.bind(includeToolbarNotificationWindrow);

      id = R.id.iv_notification_win_image;
      ImageView ivNotificationWinImage = rootView.findViewById(id);
      if (ivNotificationWinImage == null) {
        break missingId;
      }

      id = R.id.tv_notification_win_body;
      TextView tvNotificationWinBody = rootView.findViewById(id);
      if (tvNotificationWinBody == null) {
        break missingId;
      }

      id = R.id.tv_notification_win_date;
      TextView tvNotificationWinDate = rootView.findViewById(id);
      if (tvNotificationWinDate == null) {
        break missingId;
      }

      id = R.id.tv_notification_win_title;
      TextView tvNotificationWinTitle = rootView.findViewById(id);
      if (tvNotificationWinTitle == null) {
        break missingId;
      }

      return new ActivityNotificationBinding((LinearLayout) rootView,
          binding_includeToolbarNotificationWindrow, ivNotificationWinImage, tvNotificationWinBody,
          tvNotificationWinDate, tvNotificationWinTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
