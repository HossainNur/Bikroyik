// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomAlertDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dialogDelete;

  @NonNull
  public final TextView dialogDiscount;

  @NonNull
  public final TextView dialogDone;

  @NonNull
  public final TextView dialogId;

  @NonNull
  public final TextView dialogName;

  @NonNull
  public final TextView dialogOffer;

  @NonNull
  public final TextView dialogPrice;

  @NonNull
  public final EditText dialogQuantity;

  @NonNull
  public final TextView dialogStock;

  @NonNull
  public final TextView dialogTotalPrice;

  @NonNull
  public final ImageView dismissDialog;

  @NonNull
  public final LinearLayout ivCancelDialog;

  private CustomAlertDialogBinding(@NonNull LinearLayout rootView, @NonNull TextView dialogDelete,
      @NonNull TextView dialogDiscount, @NonNull TextView dialogDone, @NonNull TextView dialogId,
      @NonNull TextView dialogName, @NonNull TextView dialogOffer, @NonNull TextView dialogPrice,
      @NonNull EditText dialogQuantity, @NonNull TextView dialogStock,
      @NonNull TextView dialogTotalPrice, @NonNull ImageView dismissDialog,
      @NonNull LinearLayout ivCancelDialog) {
    this.rootView = rootView;
    this.dialogDelete = dialogDelete;
    this.dialogDiscount = dialogDiscount;
    this.dialogDone = dialogDone;
    this.dialogId = dialogId;
    this.dialogName = dialogName;
    this.dialogOffer = dialogOffer;
    this.dialogPrice = dialogPrice;
    this.dialogQuantity = dialogQuantity;
    this.dialogStock = dialogStock;
    this.dialogTotalPrice = dialogTotalPrice;
    this.dismissDialog = dismissDialog;
    this.ivCancelDialog = ivCancelDialog;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomAlertDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomAlertDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_alert_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomAlertDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialog_delete;
      TextView dialogDelete = rootView.findViewById(id);
      if (dialogDelete == null) {
        break missingId;
      }

      id = R.id.dialog_discount;
      TextView dialogDiscount = rootView.findViewById(id);
      if (dialogDiscount == null) {
        break missingId;
      }

      id = R.id.dialog_done;
      TextView dialogDone = rootView.findViewById(id);
      if (dialogDone == null) {
        break missingId;
      }

      id = R.id.dialog_id;
      TextView dialogId = rootView.findViewById(id);
      if (dialogId == null) {
        break missingId;
      }

      id = R.id.dialog_name;
      TextView dialogName = rootView.findViewById(id);
      if (dialogName == null) {
        break missingId;
      }

      id = R.id.dialog_offer;
      TextView dialogOffer = rootView.findViewById(id);
      if (dialogOffer == null) {
        break missingId;
      }

      id = R.id.dialog_price;
      TextView dialogPrice = rootView.findViewById(id);
      if (dialogPrice == null) {
        break missingId;
      }

      id = R.id.dialog_quantity;
      EditText dialogQuantity = rootView.findViewById(id);
      if (dialogQuantity == null) {
        break missingId;
      }

      id = R.id.dialog_stock;
      TextView dialogStock = rootView.findViewById(id);
      if (dialogStock == null) {
        break missingId;
      }

      id = R.id.dialog_total_price;
      TextView dialogTotalPrice = rootView.findViewById(id);
      if (dialogTotalPrice == null) {
        break missingId;
      }

      id = R.id.dismiss_dialog;
      ImageView dismissDialog = rootView.findViewById(id);
      if (dismissDialog == null) {
        break missingId;
      }

      id = R.id.ivCancelDialog;
      LinearLayout ivCancelDialog = rootView.findViewById(id);
      if (ivCancelDialog == null) {
        break missingId;
      }

      return new CustomAlertDialogBinding((LinearLayout) rootView, dialogDelete, dialogDiscount,
          dialogDone, dialogId, dialogName, dialogOffer, dialogPrice, dialogQuantity, dialogStock,
          dialogTotalPrice, dismissDialog, ivCancelDialog);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
