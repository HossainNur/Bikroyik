// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TaskListRowBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox cbTask;

  @NonNull
  public final TextView tvNotificationDate;

  @NonNull
  public final TextView tvNotificationDescription;

  @NonNull
  public final TextView tvNotificationType;

  @NonNull
  public final TextView tvVLine;

  private TaskListRowBinding(@NonNull RelativeLayout rootView, @NonNull CheckBox cbTask,
      @NonNull TextView tvNotificationDate, @NonNull TextView tvNotificationDescription,
      @NonNull TextView tvNotificationType, @NonNull TextView tvVLine) {
    this.rootView = rootView;
    this.cbTask = cbTask;
    this.tvNotificationDate = tvNotificationDate;
    this.tvNotificationDescription = tvNotificationDescription;
    this.tvNotificationType = tvNotificationType;
    this.tvVLine = tvVLine;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TaskListRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TaskListRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.task_list_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TaskListRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbTask;
      CheckBox cbTask = rootView.findViewById(id);
      if (cbTask == null) {
        break missingId;
      }

      id = R.id.tvNotificationDate;
      TextView tvNotificationDate = rootView.findViewById(id);
      if (tvNotificationDate == null) {
        break missingId;
      }

      id = R.id.tvNotificationDescription;
      TextView tvNotificationDescription = rootView.findViewById(id);
      if (tvNotificationDescription == null) {
        break missingId;
      }

      id = R.id.tvNotificationType;
      TextView tvNotificationType = rootView.findViewById(id);
      if (tvNotificationType == null) {
        break missingId;
      }

      id = R.id.tvVLine;
      TextView tvVLine = rootView.findViewById(id);
      if (tvVLine == null) {
        break missingId;
      }

      return new TaskListRowBinding((RelativeLayout) rootView, cbTask, tvNotificationDate,
          tvNotificationDescription, tvNotificationType, tvVLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
