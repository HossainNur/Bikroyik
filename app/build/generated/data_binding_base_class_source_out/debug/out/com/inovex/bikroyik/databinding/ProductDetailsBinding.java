// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView productDesc;

  @NonNull
  public final TextView productDiscount;

  @NonNull
  public final TextView productId;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView productOffer;

  @NonNull
  public final TextView productPrice;

  private ProductDetailsBinding(@NonNull LinearLayout rootView, @NonNull ImageView image,
      @NonNull TextView productDesc, @NonNull TextView productDiscount, @NonNull TextView productId,
      @NonNull TextView productName, @NonNull TextView productOffer,
      @NonNull TextView productPrice) {
    this.rootView = rootView;
    this.image = image;
    this.productDesc = productDesc;
    this.productDiscount = productDiscount;
    this.productId = productId;
    this.productName = productName;
    this.productOffer = productOffer;
    this.productPrice = productPrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.product_desc;
      TextView productDesc = rootView.findViewById(id);
      if (productDesc == null) {
        break missingId;
      }

      id = R.id.product_discount;
      TextView productDiscount = rootView.findViewById(id);
      if (productDiscount == null) {
        break missingId;
      }

      id = R.id.product_id;
      TextView productId = rootView.findViewById(id);
      if (productId == null) {
        break missingId;
      }

      id = R.id.product_name;
      TextView productName = rootView.findViewById(id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.product_offer;
      TextView productOffer = rootView.findViewById(id);
      if (productOffer == null) {
        break missingId;
      }

      id = R.id.product_price;
      TextView productPrice = rootView.findViewById(id);
      if (productPrice == null) {
        break missingId;
      }

      return new ProductDetailsBinding((LinearLayout) rootView, image, productDesc, productDiscount,
          productId, productName, productOffer, productPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
