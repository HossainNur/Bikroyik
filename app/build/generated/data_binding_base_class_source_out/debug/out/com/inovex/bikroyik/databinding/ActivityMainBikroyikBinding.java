// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBikroyikBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final RecyclerView homeFeatureRecycler;

  @NonNull
  public final CardView homeReporting;

  @NonNull
  public final DrawerLayout myDrawerLayout;

  @NonNull
  public final TextView todaySales;

  @NonNull
  public final TextView tvDueAmountToday;

  @NonNull
  public final TextView tvDueToday;

  @NonNull
  public final TextView tvExpenseAmountToday;

  @NonNull
  public final TextView tvExpenseToday;

  @NonNull
  public final TextView tvMonthlySale;

  @NonNull
  public final TextView tvSaleAmountMonthly;

  @NonNull
  public final TextView tvSaleToday;

  @NonNull
  public final TextView tvSalesToday;

  @NonNull
  public final TextView tvSalesTodayAmount;

  @NonNull
  public final TextView tvToday;

  private ActivityMainBikroyikBinding(@NonNull DrawerLayout rootView,
      @NonNull RecyclerView homeFeatureRecycler, @NonNull CardView homeReporting,
      @NonNull DrawerLayout myDrawerLayout, @NonNull TextView todaySales,
      @NonNull TextView tvDueAmountToday, @NonNull TextView tvDueToday,
      @NonNull TextView tvExpenseAmountToday, @NonNull TextView tvExpenseToday,
      @NonNull TextView tvMonthlySale, @NonNull TextView tvSaleAmountMonthly,
      @NonNull TextView tvSaleToday, @NonNull TextView tvSalesToday,
      @NonNull TextView tvSalesTodayAmount, @NonNull TextView tvToday) {
    this.rootView = rootView;
    this.homeFeatureRecycler = homeFeatureRecycler;
    this.homeReporting = homeReporting;
    this.myDrawerLayout = myDrawerLayout;
    this.todaySales = todaySales;
    this.tvDueAmountToday = tvDueAmountToday;
    this.tvDueToday = tvDueToday;
    this.tvExpenseAmountToday = tvExpenseAmountToday;
    this.tvExpenseToday = tvExpenseToday;
    this.tvMonthlySale = tvMonthlySale;
    this.tvSaleAmountMonthly = tvSaleAmountMonthly;
    this.tvSaleToday = tvSaleToday;
    this.tvSalesToday = tvSalesToday;
    this.tvSalesTodayAmount = tvSalesTodayAmount;
    this.tvToday = tvToday;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBikroyikBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBikroyikBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_bikroyik, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBikroyikBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.homeFeature_recycler;
      RecyclerView homeFeatureRecycler = rootView.findViewById(id);
      if (homeFeatureRecycler == null) {
        break missingId;
      }

      id = R.id.home_reporting;
      CardView homeReporting = rootView.findViewById(id);
      if (homeReporting == null) {
        break missingId;
      }

      DrawerLayout myDrawerLayout = (DrawerLayout) rootView;

      id = R.id.todaySales;
      TextView todaySales = rootView.findViewById(id);
      if (todaySales == null) {
        break missingId;
      }

      id = R.id.tv_dueAmountToday;
      TextView tvDueAmountToday = rootView.findViewById(id);
      if (tvDueAmountToday == null) {
        break missingId;
      }

      id = R.id.tv_dueToday;
      TextView tvDueToday = rootView.findViewById(id);
      if (tvDueToday == null) {
        break missingId;
      }

      id = R.id.tv_expenseAmountToday;
      TextView tvExpenseAmountToday = rootView.findViewById(id);
      if (tvExpenseAmountToday == null) {
        break missingId;
      }

      id = R.id.tv_expenseToday;
      TextView tvExpenseToday = rootView.findViewById(id);
      if (tvExpenseToday == null) {
        break missingId;
      }

      id = R.id.tv_monthlySale;
      TextView tvMonthlySale = rootView.findViewById(id);
      if (tvMonthlySale == null) {
        break missingId;
      }

      id = R.id.tv_saleAmountMonthly;
      TextView tvSaleAmountMonthly = rootView.findViewById(id);
      if (tvSaleAmountMonthly == null) {
        break missingId;
      }

      id = R.id.tv_saleToday;
      TextView tvSaleToday = rootView.findViewById(id);
      if (tvSaleToday == null) {
        break missingId;
      }

      id = R.id.tv_salesToday;
      TextView tvSalesToday = rootView.findViewById(id);
      if (tvSalesToday == null) {
        break missingId;
      }

      id = R.id.tv_salesTodayAmount;
      TextView tvSalesTodayAmount = rootView.findViewById(id);
      if (tvSalesTodayAmount == null) {
        break missingId;
      }

      id = R.id.tv_today;
      TextView tvToday = rootView.findViewById(id);
      if (tvToday == null) {
        break missingId;
      }

      return new ActivityMainBikroyikBinding((DrawerLayout) rootView, homeFeatureRecycler,
          homeReporting, myDrawerLayout, todaySales, tvDueAmountToday, tvDueToday,
          tvExpenseAmountToday, tvExpenseToday, tvMonthlySale, tvSaleAmountMonthly, tvSaleToday,
          tvSalesToday, tvSalesTodayAmount, tvToday);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
