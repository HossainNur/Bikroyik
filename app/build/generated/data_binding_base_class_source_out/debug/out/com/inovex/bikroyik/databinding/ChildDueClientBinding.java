// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChildDueClientBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView tvContactName;

  @NonNull
  public final TextView tvDueAmount;

  @NonNull
  public final TextView tvDueStatus;

  @NonNull
  public final TextView tvPhoneNumber;

  private ChildDueClientBinding(@NonNull CardView rootView, @NonNull CircleImageView profileImage,
      @NonNull TextView tvContactName, @NonNull TextView tvDueAmount, @NonNull TextView tvDueStatus,
      @NonNull TextView tvPhoneNumber) {
    this.rootView = rootView;
    this.profileImage = profileImage;
    this.tvContactName = tvContactName;
    this.tvDueAmount = tvDueAmount;
    this.tvDueStatus = tvDueStatus;
    this.tvPhoneNumber = tvPhoneNumber;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ChildDueClientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChildDueClientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.child_due_client, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChildDueClientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.profile_image;
      CircleImageView profileImage = rootView.findViewById(id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.tv_contactName;
      TextView tvContactName = rootView.findViewById(id);
      if (tvContactName == null) {
        break missingId;
      }

      id = R.id.tv_dueAmount;
      TextView tvDueAmount = rootView.findViewById(id);
      if (tvDueAmount == null) {
        break missingId;
      }

      id = R.id.tv_dueStatus;
      TextView tvDueStatus = rootView.findViewById(id);
      if (tvDueStatus == null) {
        break missingId;
      }

      id = R.id.tv_phoneNumber;
      TextView tvPhoneNumber = rootView.findViewById(id);
      if (tvPhoneNumber == null) {
        break missingId;
      }

      return new ChildDueClientBinding((CardView) rootView, profileImage, tvContactName,
          tvDueAmount, tvDueStatus, tvPhoneNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
