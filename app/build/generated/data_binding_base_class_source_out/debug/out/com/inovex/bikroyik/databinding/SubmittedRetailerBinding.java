// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SubmittedRetailerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView retailAddress;

  @NonNull
  public final TextView retailMarket;

  @NonNull
  public final TextView retailName;

  @NonNull
  public final TextView retailOwner;

  @NonNull
  public final TextView retailPhone;

  private SubmittedRetailerBinding(@NonNull LinearLayout rootView, @NonNull TextView retailAddress,
      @NonNull TextView retailMarket, @NonNull TextView retailName, @NonNull TextView retailOwner,
      @NonNull TextView retailPhone) {
    this.rootView = rootView;
    this.retailAddress = retailAddress;
    this.retailMarket = retailMarket;
    this.retailName = retailName;
    this.retailOwner = retailOwner;
    this.retailPhone = retailPhone;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SubmittedRetailerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SubmittedRetailerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.submitted_retailer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SubmittedRetailerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.retail_address;
      TextView retailAddress = rootView.findViewById(id);
      if (retailAddress == null) {
        break missingId;
      }

      id = R.id.retail_market;
      TextView retailMarket = rootView.findViewById(id);
      if (retailMarket == null) {
        break missingId;
      }

      id = R.id.retail_name;
      TextView retailName = rootView.findViewById(id);
      if (retailName == null) {
        break missingId;
      }

      id = R.id.retail_owner;
      TextView retailOwner = rootView.findViewById(id);
      if (retailOwner == null) {
        break missingId;
      }

      id = R.id.retail_phone;
      TextView retailPhone = rootView.findViewById(id);
      if (retailPhone == null) {
        break missingId;
      }

      return new SubmittedRetailerBinding((LinearLayout) rootView, retailAddress, retailMarket,
          retailName, retailOwner, retailPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
