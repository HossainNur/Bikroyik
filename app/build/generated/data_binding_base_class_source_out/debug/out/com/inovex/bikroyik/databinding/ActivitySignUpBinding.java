// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import com.jaredrummler.materialspinner.MaterialSpinner;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout activityBill;

  @NonNull
  public final TextView addressId;

  @NonNull
  public final TextView addressText;

  @NonNull
  public final TextView businessText;

  @NonNull
  public final EditText editAddress;

  @NonNull
  public final EditText editMobile;

  @NonNull
  public final EditText editName;

  @NonNull
  public final EditText editOrg;

  @NonNull
  public final EditText editStore;

  @NonNull
  public final TextView mobileId;

  @NonNull
  public final TextView mobileText;

  @NonNull
  public final TextView nameText;

  @NonNull
  public final TextView nameTextId;

  @NonNull
  public final TextView orgText;

  @NonNull
  public final TextView organizationId;

  @NonNull
  public final TextView packageText;

  @NonNull
  public final Button savebtnId;

  @NonNull
  public final MaterialSpinner spinnerBuisnessType;

  @NonNull
  public final MaterialSpinner spinnerPackage;

  @NonNull
  public final TextView storeId;

  @NonNull
  public final TextView storeText;

  @NonNull
  public final ToolbarSignupBinding toolbar1;

  private ActivitySignUpBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout activityBill, @NonNull TextView addressId,
      @NonNull TextView addressText, @NonNull TextView businessText, @NonNull EditText editAddress,
      @NonNull EditText editMobile, @NonNull EditText editName, @NonNull EditText editOrg,
      @NonNull EditText editStore, @NonNull TextView mobileId, @NonNull TextView mobileText,
      @NonNull TextView nameText, @NonNull TextView nameTextId, @NonNull TextView orgText,
      @NonNull TextView organizationId, @NonNull TextView packageText, @NonNull Button savebtnId,
      @NonNull MaterialSpinner spinnerBuisnessType, @NonNull MaterialSpinner spinnerPackage,
      @NonNull TextView storeId, @NonNull TextView storeText,
      @NonNull ToolbarSignupBinding toolbar1) {
    this.rootView = rootView;
    this.activityBill = activityBill;
    this.addressId = addressId;
    this.addressText = addressText;
    this.businessText = businessText;
    this.editAddress = editAddress;
    this.editMobile = editMobile;
    this.editName = editName;
    this.editOrg = editOrg;
    this.editStore = editStore;
    this.mobileId = mobileId;
    this.mobileText = mobileText;
    this.nameText = nameText;
    this.nameTextId = nameTextId;
    this.orgText = orgText;
    this.organizationId = organizationId;
    this.packageText = packageText;
    this.savebtnId = savebtnId;
    this.spinnerBuisnessType = spinnerBuisnessType;
    this.spinnerPackage = spinnerPackage;
    this.storeId = storeId;
    this.storeText = storeText;
    this.toolbar1 = toolbar1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout activityBill = (RelativeLayout) rootView;

      id = R.id.address_id;
      TextView addressId = rootView.findViewById(id);
      if (addressId == null) {
        break missingId;
      }

      id = R.id.addressText;
      TextView addressText = rootView.findViewById(id);
      if (addressText == null) {
        break missingId;
      }

      id = R.id.businessText;
      TextView businessText = rootView.findViewById(id);
      if (businessText == null) {
        break missingId;
      }

      id = R.id.editAddress;
      EditText editAddress = rootView.findViewById(id);
      if (editAddress == null) {
        break missingId;
      }

      id = R.id.editMobile;
      EditText editMobile = rootView.findViewById(id);
      if (editMobile == null) {
        break missingId;
      }

      id = R.id.editName;
      EditText editName = rootView.findViewById(id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.editOrg;
      EditText editOrg = rootView.findViewById(id);
      if (editOrg == null) {
        break missingId;
      }

      id = R.id.editStore;
      EditText editStore = rootView.findViewById(id);
      if (editStore == null) {
        break missingId;
      }

      id = R.id.mobile_id;
      TextView mobileId = rootView.findViewById(id);
      if (mobileId == null) {
        break missingId;
      }

      id = R.id.mobileText;
      TextView mobileText = rootView.findViewById(id);
      if (mobileText == null) {
        break missingId;
      }

      id = R.id.nameText;
      TextView nameText = rootView.findViewById(id);
      if (nameText == null) {
        break missingId;
      }

      id = R.id.name_text_id;
      TextView nameTextId = rootView.findViewById(id);
      if (nameTextId == null) {
        break missingId;
      }

      id = R.id.orgText;
      TextView orgText = rootView.findViewById(id);
      if (orgText == null) {
        break missingId;
      }

      id = R.id.organization_id;
      TextView organizationId = rootView.findViewById(id);
      if (organizationId == null) {
        break missingId;
      }

      id = R.id.packageText;
      TextView packageText = rootView.findViewById(id);
      if (packageText == null) {
        break missingId;
      }

      id = R.id.savebtnId;
      Button savebtnId = rootView.findViewById(id);
      if (savebtnId == null) {
        break missingId;
      }

      id = R.id.spinnerBuisnessType;
      MaterialSpinner spinnerBuisnessType = rootView.findViewById(id);
      if (spinnerBuisnessType == null) {
        break missingId;
      }

      id = R.id.spinnerPackage;
      MaterialSpinner spinnerPackage = rootView.findViewById(id);
      if (spinnerPackage == null) {
        break missingId;
      }

      id = R.id.store_id;
      TextView storeId = rootView.findViewById(id);
      if (storeId == null) {
        break missingId;
      }

      id = R.id.storeText;
      TextView storeText = rootView.findViewById(id);
      if (storeText == null) {
        break missingId;
      }

      id = R.id.toolbar1;
      View toolbar1 = rootView.findViewById(id);
      if (toolbar1 == null) {
        break missingId;
      }
      ToolbarSignupBinding binding_toolbar1 = ToolbarSignupBinding.bind(toolbar1);

      return new ActivitySignUpBinding((RelativeLayout) rootView, activityBill, addressId,
          addressText, businessText, editAddress, editMobile, editName, editOrg, editStore,
          mobileId, mobileText, nameText, nameTextId, orgText, organizationId, packageText,
          savebtnId, spinnerBuisnessType, spinnerPackage, storeId, storeText, binding_toolbar1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
