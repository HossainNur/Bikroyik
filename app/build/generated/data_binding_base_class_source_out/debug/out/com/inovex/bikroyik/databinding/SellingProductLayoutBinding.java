// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import com.jaredrummler.materialspinner.MaterialSpinner;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SellingProductLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout bottomLayout;

  @NonNull
  public final TextView cancelButtonText;

  @NonNull
  public final RecyclerView itemChargeRecyclerTotalCharge;

  @NonNull
  public final LinearLayout llBtnChargeOrder;

  @NonNull
  public final LinearLayout llBtnSaveOrder;

  @NonNull
  public final MaterialSpinner spinnerTotalCharge;

  @NonNull
  public final TextView tvCharge;

  @NonNull
  public final TextView tvChargeAmount;

  private SellingProductLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout bottomLayout, @NonNull TextView cancelButtonText,
      @NonNull RecyclerView itemChargeRecyclerTotalCharge, @NonNull LinearLayout llBtnChargeOrder,
      @NonNull LinearLayout llBtnSaveOrder, @NonNull MaterialSpinner spinnerTotalCharge,
      @NonNull TextView tvCharge, @NonNull TextView tvChargeAmount) {
    this.rootView = rootView;
    this.bottomLayout = bottomLayout;
    this.cancelButtonText = cancelButtonText;
    this.itemChargeRecyclerTotalCharge = itemChargeRecyclerTotalCharge;
    this.llBtnChargeOrder = llBtnChargeOrder;
    this.llBtnSaveOrder = llBtnSaveOrder;
    this.spinnerTotalCharge = spinnerTotalCharge;
    this.tvCharge = tvCharge;
    this.tvChargeAmount = tvChargeAmount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SellingProductLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SellingProductLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.selling_product_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SellingProductLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_layout;
      LinearLayout bottomLayout = rootView.findViewById(id);
      if (bottomLayout == null) {
        break missingId;
      }

      id = R.id.cancelButtonText;
      TextView cancelButtonText = rootView.findViewById(id);
      if (cancelButtonText == null) {
        break missingId;
      }

      id = R.id.itemCharge_recycler_totalCharge;
      RecyclerView itemChargeRecyclerTotalCharge = rootView.findViewById(id);
      if (itemChargeRecyclerTotalCharge == null) {
        break missingId;
      }

      id = R.id.ll_btn_charge_order;
      LinearLayout llBtnChargeOrder = rootView.findViewById(id);
      if (llBtnChargeOrder == null) {
        break missingId;
      }

      id = R.id.ll_btn_save_order;
      LinearLayout llBtnSaveOrder = rootView.findViewById(id);
      if (llBtnSaveOrder == null) {
        break missingId;
      }

      id = R.id.spinner_totalCharge;
      MaterialSpinner spinnerTotalCharge = rootView.findViewById(id);
      if (spinnerTotalCharge == null) {
        break missingId;
      }

      id = R.id.tv_charge;
      TextView tvCharge = rootView.findViewById(id);
      if (tvCharge == null) {
        break missingId;
      }

      id = R.id.tv_charge_amount;
      TextView tvChargeAmount = rootView.findViewById(id);
      if (tvChargeAmount == null) {
        break missingId;
      }

      return new SellingProductLayoutBinding((ConstraintLayout) rootView, bottomLayout,
          cancelButtonText, itemChargeRecyclerTotalCharge, llBtnChargeOrder, llBtnSaveOrder,
          spinnerTotalCharge, tvCharge, tvChargeAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
