// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import com.inovex.bikroyik.widget.ArcProgress;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSummeryOrderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout arcLeft;

  @NonNull
  public final ArcProgress arcStoreOrder;

  @NonNull
  public final LinearLayout llSummary;

  @NonNull
  public final TextView summeryCheckedInTime;

  @NonNull
  public final TextView tvDeliveredQty;

  @NonNull
  public final TextView tvDeliveredValue;

  @NonNull
  public final TextView tvTargetQty;

  @NonNull
  public final TextView tvTargetValue;

  private FragmentSummeryOrderBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout arcLeft, @NonNull ArcProgress arcStoreOrder,
      @NonNull LinearLayout llSummary, @NonNull TextView summeryCheckedInTime,
      @NonNull TextView tvDeliveredQty, @NonNull TextView tvDeliveredValue,
      @NonNull TextView tvTargetQty, @NonNull TextView tvTargetValue) {
    this.rootView = rootView;
    this.arcLeft = arcLeft;
    this.arcStoreOrder = arcStoreOrder;
    this.llSummary = llSummary;
    this.summeryCheckedInTime = summeryCheckedInTime;
    this.tvDeliveredQty = tvDeliveredQty;
    this.tvDeliveredValue = tvDeliveredValue;
    this.tvTargetQty = tvTargetQty;
    this.tvTargetValue = tvTargetValue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSummeryOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSummeryOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_summery_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSummeryOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arc_left;
      RelativeLayout arcLeft = rootView.findViewById(id);
      if (arcLeft == null) {
        break missingId;
      }

      id = R.id.arc_store_order;
      ArcProgress arcStoreOrder = rootView.findViewById(id);
      if (arcStoreOrder == null) {
        break missingId;
      }

      id = R.id.llSummary;
      LinearLayout llSummary = rootView.findViewById(id);
      if (llSummary == null) {
        break missingId;
      }

      id = R.id.summery_checked_in_time;
      TextView summeryCheckedInTime = rootView.findViewById(id);
      if (summeryCheckedInTime == null) {
        break missingId;
      }

      id = R.id.tvDeliveredQty;
      TextView tvDeliveredQty = rootView.findViewById(id);
      if (tvDeliveredQty == null) {
        break missingId;
      }

      id = R.id.tvDeliveredValue;
      TextView tvDeliveredValue = rootView.findViewById(id);
      if (tvDeliveredValue == null) {
        break missingId;
      }

      id = R.id.tvTargetQty;
      TextView tvTargetQty = rootView.findViewById(id);
      if (tvTargetQty == null) {
        break missingId;
      }

      id = R.id.tvTargetValue;
      TextView tvTargetValue = rootView.findViewById(id);
      if (tvTargetValue == null) {
        break missingId;
      }

      return new FragmentSummeryOrderBinding((LinearLayout) rootView, arcLeft, arcStoreOrder,
          llSummary, summeryCheckedInTime, tvDeliveredQty, tvDeliveredValue, tvTargetQty,
          tvTargetValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
