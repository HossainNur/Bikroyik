// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContactsListRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llCallContact;

  @NonNull
  public final LinearLayout llImageView;

  @NonNull
  public final LinearLayout llInfo;

  @NonNull
  public final TextView tvContactsAddress;

  @NonNull
  public final TextView tvContactsNumber;

  @NonNull
  public final TextView tvContactsTitle;

  @NonNull
  public final TextView tvContactsType;

  private ContactsListRowBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout llCallContact, @NonNull LinearLayout llImageView,
      @NonNull LinearLayout llInfo, @NonNull TextView tvContactsAddress,
      @NonNull TextView tvContactsNumber, @NonNull TextView tvContactsTitle,
      @NonNull TextView tvContactsType) {
    this.rootView = rootView;
    this.llCallContact = llCallContact;
    this.llImageView = llImageView;
    this.llInfo = llInfo;
    this.tvContactsAddress = tvContactsAddress;
    this.tvContactsNumber = tvContactsNumber;
    this.tvContactsTitle = tvContactsTitle;
    this.tvContactsType = tvContactsType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContactsListRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContactsListRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.contacts_list_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContactsListRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.llCallContact;
      LinearLayout llCallContact = rootView.findViewById(id);
      if (llCallContact == null) {
        break missingId;
      }

      id = R.id.llImageView;
      LinearLayout llImageView = rootView.findViewById(id);
      if (llImageView == null) {
        break missingId;
      }

      id = R.id.llInfo;
      LinearLayout llInfo = rootView.findViewById(id);
      if (llInfo == null) {
        break missingId;
      }

      id = R.id.tvContactsAddress;
      TextView tvContactsAddress = rootView.findViewById(id);
      if (tvContactsAddress == null) {
        break missingId;
      }

      id = R.id.tvContactsNumber;
      TextView tvContactsNumber = rootView.findViewById(id);
      if (tvContactsNumber == null) {
        break missingId;
      }

      id = R.id.tvContactsTitle;
      TextView tvContactsTitle = rootView.findViewById(id);
      if (tvContactsTitle == null) {
        break missingId;
      }

      id = R.id.tvContactsType;
      TextView tvContactsType = rootView.findViewById(id);
      if (tvContactsType == null) {
        break missingId;
      }

      return new ContactsListRowBinding((LinearLayout) rootView, llCallContact, llImageView, llInfo,
          tvContactsAddress, tvContactsNumber, tvContactsTitle, tvContactsType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
