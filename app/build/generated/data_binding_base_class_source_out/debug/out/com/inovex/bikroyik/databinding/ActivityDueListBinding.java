// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDueListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView addExpenseImage;

  @NonNull
  public final Button btnDeposit;

  @NonNull
  public final TextView classSelection;

  @NonNull
  public final Button datePickerButton;

  @NonNull
  public final EditText depositAmount;

  @NonNull
  public final RelativeLayout depositLayout;

  @NonNull
  public final TextView depositText;

  @NonNull
  public final LinearLayout depositTotalLayout;

  @NonNull
  public final TextView details;

  @NonNull
  public final EditText dueAmount;

  @NonNull
  public final TextView dueAmountId;

  @NonNull
  public final Button dueBtnId;

  @NonNull
  public final EditText dueDescription;

  @NonNull
  public final LinearLayout dueLayout;

  @NonNull
  public final TextView dueMobileNumber;

  @NonNull
  public final TextView dueName;

  @NonNull
  public final TextView mobileNumber;

  @NonNull
  public final TextView nameId;

  @NonNull
  public final EditText paidAmount;

  @NonNull
  public final TextView payAmount;

  @NonNull
  public final RadioButton radioCustomer;

  @NonNull
  public final RadioGroup radioGroupId;

  @NonNull
  public final RadioButton radioSupplier;

  @NonNull
  public final Button savebtnId;

  @NonNull
  public final Spinner spinner3;

  @NonNull
  public final TextView textView;

  @NonNull
  public final ToolbarBakiBinding toolbar1;

  @NonNull
  public final LinearLayout totalDueAmountId;

  @NonNull
  public final TextView transaction;

  private ActivityDueListBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView addExpenseImage, @NonNull Button btnDeposit,
      @NonNull TextView classSelection, @NonNull Button datePickerButton,
      @NonNull EditText depositAmount, @NonNull RelativeLayout depositLayout,
      @NonNull TextView depositText, @NonNull LinearLayout depositTotalLayout,
      @NonNull TextView details, @NonNull EditText dueAmount, @NonNull TextView dueAmountId,
      @NonNull Button dueBtnId, @NonNull EditText dueDescription, @NonNull LinearLayout dueLayout,
      @NonNull TextView dueMobileNumber, @NonNull TextView dueName, @NonNull TextView mobileNumber,
      @NonNull TextView nameId, @NonNull EditText paidAmount, @NonNull TextView payAmount,
      @NonNull RadioButton radioCustomer, @NonNull RadioGroup radioGroupId,
      @NonNull RadioButton radioSupplier, @NonNull Button savebtnId, @NonNull Spinner spinner3,
      @NonNull TextView textView, @NonNull ToolbarBakiBinding toolbar1,
      @NonNull LinearLayout totalDueAmountId, @NonNull TextView transaction) {
    this.rootView = rootView;
    this.addExpenseImage = addExpenseImage;
    this.btnDeposit = btnDeposit;
    this.classSelection = classSelection;
    this.datePickerButton = datePickerButton;
    this.depositAmount = depositAmount;
    this.depositLayout = depositLayout;
    this.depositText = depositText;
    this.depositTotalLayout = depositTotalLayout;
    this.details = details;
    this.dueAmount = dueAmount;
    this.dueAmountId = dueAmountId;
    this.dueBtnId = dueBtnId;
    this.dueDescription = dueDescription;
    this.dueLayout = dueLayout;
    this.dueMobileNumber = dueMobileNumber;
    this.dueName = dueName;
    this.mobileNumber = mobileNumber;
    this.nameId = nameId;
    this.paidAmount = paidAmount;
    this.payAmount = payAmount;
    this.radioCustomer = radioCustomer;
    this.radioGroupId = radioGroupId;
    this.radioSupplier = radioSupplier;
    this.savebtnId = savebtnId;
    this.spinner3 = spinner3;
    this.textView = textView;
    this.toolbar1 = toolbar1;
    this.totalDueAmountId = totalDueAmountId;
    this.transaction = transaction;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDueListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDueListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_due_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDueListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_expense_image;
      ImageView addExpenseImage = rootView.findViewById(id);
      if (addExpenseImage == null) {
        break missingId;
      }

      id = R.id.btnDeposit;
      Button btnDeposit = rootView.findViewById(id);
      if (btnDeposit == null) {
        break missingId;
      }

      id = R.id.classSelection;
      TextView classSelection = rootView.findViewById(id);
      if (classSelection == null) {
        break missingId;
      }

      id = R.id.datePickerButton;
      Button datePickerButton = rootView.findViewById(id);
      if (datePickerButton == null) {
        break missingId;
      }

      id = R.id.depositAmount;
      EditText depositAmount = rootView.findViewById(id);
      if (depositAmount == null) {
        break missingId;
      }

      RelativeLayout depositLayout = (RelativeLayout) rootView;

      id = R.id.depositText;
      TextView depositText = rootView.findViewById(id);
      if (depositText == null) {
        break missingId;
      }

      id = R.id.depositTotalLayout;
      LinearLayout depositTotalLayout = rootView.findViewById(id);
      if (depositTotalLayout == null) {
        break missingId;
      }

      id = R.id.details;
      TextView details = rootView.findViewById(id);
      if (details == null) {
        break missingId;
      }

      id = R.id.dueAmount;
      EditText dueAmount = rootView.findViewById(id);
      if (dueAmount == null) {
        break missingId;
      }

      id = R.id.dueAmountId;
      TextView dueAmountId = rootView.findViewById(id);
      if (dueAmountId == null) {
        break missingId;
      }

      id = R.id.dueBtnId;
      Button dueBtnId = rootView.findViewById(id);
      if (dueBtnId == null) {
        break missingId;
      }

      id = R.id.dueDescription;
      EditText dueDescription = rootView.findViewById(id);
      if (dueDescription == null) {
        break missingId;
      }

      id = R.id.dueLayout;
      LinearLayout dueLayout = rootView.findViewById(id);
      if (dueLayout == null) {
        break missingId;
      }

      id = R.id.dueMobileNumber;
      TextView dueMobileNumber = rootView.findViewById(id);
      if (dueMobileNumber == null) {
        break missingId;
      }

      id = R.id.dueName;
      TextView dueName = rootView.findViewById(id);
      if (dueName == null) {
        break missingId;
      }

      id = R.id.mobileNumber;
      TextView mobileNumber = rootView.findViewById(id);
      if (mobileNumber == null) {
        break missingId;
      }

      id = R.id.nameId;
      TextView nameId = rootView.findViewById(id);
      if (nameId == null) {
        break missingId;
      }

      id = R.id.paidAmount;
      EditText paidAmount = rootView.findViewById(id);
      if (paidAmount == null) {
        break missingId;
      }

      id = R.id.payAmount;
      TextView payAmount = rootView.findViewById(id);
      if (payAmount == null) {
        break missingId;
      }

      id = R.id.radioCustomer;
      RadioButton radioCustomer = rootView.findViewById(id);
      if (radioCustomer == null) {
        break missingId;
      }

      id = R.id.radioGroupId;
      RadioGroup radioGroupId = rootView.findViewById(id);
      if (radioGroupId == null) {
        break missingId;
      }

      id = R.id.radioSupplier;
      RadioButton radioSupplier = rootView.findViewById(id);
      if (radioSupplier == null) {
        break missingId;
      }

      id = R.id.savebtnId;
      Button savebtnId = rootView.findViewById(id);
      if (savebtnId == null) {
        break missingId;
      }

      id = R.id.spinner3;
      Spinner spinner3 = rootView.findViewById(id);
      if (spinner3 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.toolbar1;
      View toolbar1 = rootView.findViewById(id);
      if (toolbar1 == null) {
        break missingId;
      }
      ToolbarBakiBinding binding_toolbar1 = ToolbarBakiBinding.bind(toolbar1);

      id = R.id.totalDueAmountId;
      LinearLayout totalDueAmountId = rootView.findViewById(id);
      if (totalDueAmountId == null) {
        break missingId;
      }

      id = R.id.transaction;
      TextView transaction = rootView.findViewById(id);
      if (transaction == null) {
        break missingId;
      }

      return new ActivityDueListBinding((RelativeLayout) rootView, addExpenseImage, btnDeposit,
          classSelection, datePickerButton, depositAmount, depositLayout, depositText,
          depositTotalLayout, details, dueAmount, dueAmountId, dueBtnId, dueDescription, dueLayout,
          dueMobileNumber, dueName, mobileNumber, nameId, paidAmount, payAmount, radioCustomer,
          radioGroupId, radioSupplier, savebtnId, spinner3, textView, binding_toolbar1,
          totalDueAmountId, transaction);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
