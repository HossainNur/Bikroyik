// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SellerListToolbarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnImageBack;

  @NonNull
  public final ImageView btnSearch;

  @NonNull
  public final EditText etSearchContact;

  @NonNull
  public final TextView toolbarTitle;

  private SellerListToolbarBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnImageBack, @NonNull ImageView btnSearch,
      @NonNull EditText etSearchContact, @NonNull TextView toolbarTitle) {
    this.rootView = rootView;
    this.btnImageBack = btnImageBack;
    this.btnSearch = btnSearch;
    this.etSearchContact = etSearchContact;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SellerListToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SellerListToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.seller_list_toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SellerListToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_imageBack;
      ImageView btnImageBack = rootView.findViewById(id);
      if (btnImageBack == null) {
        break missingId;
      }

      id = R.id.btn_search;
      ImageView btnSearch = rootView.findViewById(id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.et_search_contact;
      EditText etSearchContact = rootView.findViewById(id);
      if (etSearchContact == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = rootView.findViewById(id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new SellerListToolbarBinding((ConstraintLayout) rootView, btnImageBack, btnSearch,
          etSearchContact, toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
