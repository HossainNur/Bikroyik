// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FileNotificationItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivFile;

  @NonNull
  public final ImageView ivFileType;

  @NonNull
  public final LinearLayout llFileType;

  @NonNull
  public final LinearLayout llInfo;

  @NonNull
  public final RelativeLayout rlMessage;

  @NonNull
  public final RelativeLayout rlTop;

  @NonNull
  public final TextView tvFileDate;

  @NonNull
  public final TextView tvFileName;

  @NonNull
  public final TextView tvFileSize;

  private FileNotificationItemBinding(@NonNull RelativeLayout rootView, @NonNull ImageView ivFile,
      @NonNull ImageView ivFileType, @NonNull LinearLayout llFileType, @NonNull LinearLayout llInfo,
      @NonNull RelativeLayout rlMessage, @NonNull RelativeLayout rlTop,
      @NonNull TextView tvFileDate, @NonNull TextView tvFileName, @NonNull TextView tvFileSize) {
    this.rootView = rootView;
    this.ivFile = ivFile;
    this.ivFileType = ivFileType;
    this.llFileType = llFileType;
    this.llInfo = llInfo;
    this.rlMessage = rlMessage;
    this.rlTop = rlTop;
    this.tvFileDate = tvFileDate;
    this.tvFileName = tvFileName;
    this.tvFileSize = tvFileSize;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FileNotificationItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FileNotificationItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.file_notification_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FileNotificationItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivFile;
      ImageView ivFile = rootView.findViewById(id);
      if (ivFile == null) {
        break missingId;
      }

      id = R.id.ivFileType;
      ImageView ivFileType = rootView.findViewById(id);
      if (ivFileType == null) {
        break missingId;
      }

      id = R.id.llFileType;
      LinearLayout llFileType = rootView.findViewById(id);
      if (llFileType == null) {
        break missingId;
      }

      id = R.id.llInfo;
      LinearLayout llInfo = rootView.findViewById(id);
      if (llInfo == null) {
        break missingId;
      }

      id = R.id.rlMessage;
      RelativeLayout rlMessage = rootView.findViewById(id);
      if (rlMessage == null) {
        break missingId;
      }

      id = R.id.rlTop;
      RelativeLayout rlTop = rootView.findViewById(id);
      if (rlTop == null) {
        break missingId;
      }

      id = R.id.tvFileDate;
      TextView tvFileDate = rootView.findViewById(id);
      if (tvFileDate == null) {
        break missingId;
      }

      id = R.id.tvFileName;
      TextView tvFileName = rootView.findViewById(id);
      if (tvFileName == null) {
        break missingId;
      }

      id = R.id.tvFileSize;
      TextView tvFileSize = rootView.findViewById(id);
      if (tvFileSize == null) {
        break missingId;
      }

      return new FileNotificationItemBinding((RelativeLayout) rootView, ivFile, ivFileType,
          llFileType, llInfo, rlMessage, rlTop, tvFileDate, tvFileName, tvFileSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
