// Generated by view binder compiler. Do not edit!
package com.inovex.bikroyik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.inovex.bikroyik.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChildContactBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout addClient;

  @NonNull
  public final TextView addClientText;

  @NonNull
  public final ConstraintLayout btnAddClient;

  @NonNull
  public final ConstraintLayout clientView;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView tvContactName;

  @NonNull
  public final TextView tvPhoneNumber;

  private ChildContactBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout addClient,
      @NonNull TextView addClientText, @NonNull ConstraintLayout btnAddClient,
      @NonNull ConstraintLayout clientView, @NonNull CircleImageView profileImage,
      @NonNull TextView tvContactName, @NonNull TextView tvPhoneNumber) {
    this.rootView = rootView;
    this.addClient = addClient;
    this.addClientText = addClientText;
    this.btnAddClient = btnAddClient;
    this.clientView = clientView;
    this.profileImage = profileImage;
    this.tvContactName = tvContactName;
    this.tvPhoneNumber = tvPhoneNumber;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChildContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChildContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.child_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChildContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_client;
      LinearLayout addClient = rootView.findViewById(id);
      if (addClient == null) {
        break missingId;
      }

      id = R.id.addClientText;
      TextView addClientText = rootView.findViewById(id);
      if (addClientText == null) {
        break missingId;
      }

      id = R.id.btn_addClient;
      ConstraintLayout btnAddClient = rootView.findViewById(id);
      if (btnAddClient == null) {
        break missingId;
      }

      id = R.id.client_view;
      ConstraintLayout clientView = rootView.findViewById(id);
      if (clientView == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = rootView.findViewById(id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.tv_contactName;
      TextView tvContactName = rootView.findViewById(id);
      if (tvContactName == null) {
        break missingId;
      }

      id = R.id.tv_phoneNumber;
      TextView tvPhoneNumber = rootView.findViewById(id);
      if (tvPhoneNumber == null) {
        break missingId;
      }

      return new ChildContactBinding((ConstraintLayout) rootView, addClient, addClientText,
          btnAddClient, clientView, profileImage, tvContactName, tvPhoneNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
